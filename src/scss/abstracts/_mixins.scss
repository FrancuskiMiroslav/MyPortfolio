@mixin boxShadow {
	box-shadow: 5px 5px rgba($primaryColor, 0.4),
		10px 10px rgba($primaryColor, 0.3), 15px 15px rgba($primaryColor, 0.2),
		20px 20px rgba($primaryColor, 0.1), 25px 25px rgba($primaryColor, 0.05);
} // responsive fonts

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

@mixin fluid-typo($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;
			@media screen and (min-width: $min-vw) {
				font-size: calc(
					#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
						((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
				);
			}
			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}

// media queries
@mixin media-min-width($point) {
	@media (min-width: #{$point}px) {
		@content;
	}
}

@mixin media-max-width($point) {
	@media (max-width: #{$point}px) {
		@content;
	}
}

@mixin media-min-max($point-min, $point-max) {
	@media (min-width: #{$point-min}px) and (max-width: #{$point-max}px) {
		@content;
	}
}

@mixin mediaMD {
	@media screen and (max-width: 768px) {
		@content;
	}
}

// clearfix
@mixin clearfix {
	&:before,
	&:after {
		content: '';
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin css3-prefix($prop, $value) {
	-webkit-#{$prop}: #{$value};
	-moz-#{$prop}: #{$value};
	-ms-#{$prop}: #{$value};
	-o-#{$prop}: #{$value};
	#{$prop}: #{$value};
}

@mixin font-face($name, $file) {
	@font-face {
		font-family: '#{$name}';
		src: url('./assets/fonts/#{$file}.eot');
		src: url('./assets/fonts/#{$file}.eot?#iefix') format('embedded-opentype'),
			url('./assets/fonts/#{$file}.woff') format('woff'),
			url('./assets/fonts/#{$file}.ttf') format('truetype'),
			url('./assets/fonts/#{$file}.svg?#webfont') format('svg');
	}
}

@mixin btn {
	border: 1px solid $secondaryColor;
	color: $secondaryColor;
	padding: 10px 20px;
	text-align: center;
	text-decoration: none;
	display: inline-block;
	font-size: 20px;
	cursor: pointer;
}

@mixin spacer($point) {
	top: #{$point}vh;
	bottom: #{$point}vh;
	left: #{$point}vh;
	right: #{$point}vh;
}

@mixin easeOut {
	transition: all 0.8s ease-out;
}

@mixin fixedFooter {
	min-height: calc(100vh - 60px);
}

@mixin btn {
	display: block;
	padding: 8px 16px;
	margin-bottom: 6px;
	border-style: solid;
	border-width: 0 1px;
	cursor: pointer;
	&:hover {
		background: $secondaryColor;
		color: $primaryColor;
		@include easeOut;
	}
}

@mixin background($image) {
	@if $showImage {
		background: #{$image};
		background-size: cover;

		&:before {
			content: '';
			position: fixed;
			top: 0;
			right: 0;
			width: 100%;
			height: 100%;
			background: rgba($primaryColor, $backgroundOpacity);
			z-index: -100;
		}
	}
}

@mixin hover-border {
	position: relative;
	&:after,
	&:before {
		content: ' ';
		width: 0;
		height: 0;
		position: absolute;
		border: 0px solid transparent;
	}

	&:before {
		bottom: 0;
		left: 0;
	}

	&:after {
		top: 0;
		right: 0;
	}
	&:hover {
		&:before,
		&:after {
			width: 100%;
			height: 100%;
			border: 5px solid $secondaryColor;
		}

		&:before {
			border-right: none;
			border-bottom: none;
			transition: height 0.5s linear, width 0.5s linear 0.5s;
		}

		&:after {
			border-left: none;
			border-top: none;
			transition: height 0.5s linear 1s, width 0.5s linear 1.5s;
		}
	}
}

@mixin wrapper($max-width, $padding) {
	max-width: #{$max-width}px;
	margin: 0 auto;
	padding: 0 #{$padding}px;
}

@mixin animation-bar {
	text-align: left;
	position: relative;
	display: block;
	padding: 5px;
	font-size: 16px;
	line-height: 16px;
	border-radius: 30px;
	margin-top: auto;
	background: rgba(0, 0, 0, 0.1);
	box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.25),
		0 1px rgba(255, 255, 255, 0.08);

	& span {
		text-align: right;
		color: $primaryColor;
		font-weight: bold;
		padding-right: 5px;
		position: relative;
		display: inline-block;
		vertical-align: middle;
		height: 20px;
		border-radius: 10px 0 0 10px;
		overflow: hidden;
		background-size: 100%;
		background-image: linear-gradient(to right, $primaryColor, $secondaryColor);

		&:after {
			position: absolute;
			top: 0;
			left: 0;
			right: 0;
			bottom: 0;
			content: '';
			background-size: 100%;
			background-image: linear-gradient(
				45deg,
				#ffffff 25%,
				rgba(0, 0, 0, 0) 25%,
				rgba(0, 0, 0, 0) 50%,
				#ffffff 50%,
				#ffffff 75%,
				rgba(0, 0, 0, 0) 75%,
				rgba(0, 0, 0, 0)
			);
			background-size: 50px 50px;
			animation: progress-anim-after 1s infinite linear;
			opacity: 0.1;
		}

		@keyframes progress-anim-after {
			0% {
				background-position: 0 100%;
			}
			100% {
				background-position: 50px 100%;
			}
		}
	}
}
